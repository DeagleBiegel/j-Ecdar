test { 

double timeStamp = System.currentTimeMillis();
double c = timeStamp;
double d = timeStamp;
double globalclock = timeStamp;
timeStamp = System.currentTimeMillis();
assert(((L3L1==false) &&  d-timestamp - c-timestamp <=0 &&  globalclock-timestamp - c-timestamp <=0 &&  c-timestamp - d-timestamp <=0 &&  globalclock-timestamp - d-timestamp <=0 &&  c-timestamp - globalclock-timestamp <=0 &&  d-timestamp - globalclock-timestamp <=0));
Enter("L0");
Exit("L0");
timeStamp = System.currentTimeMillis();
assert(((L3L1==false) &&  d-timestamp - c-timestamp <=0 &&  globalclock-timestamp - c-timestamp <=0 &&  c-timestamp - d-timestamp <=0 &&  globalclock-timestamp - d-timestamp <=0 &&  c-timestamp - globalclock-timestamp <=0 &&  d-timestamp - globalclock-timestamp <=0));
input("E1");
timeStamp = System.currentTimeMillis();
assert(((L3L1==false) &&  d-timestamp - c-timestamp <=0 &&  globalclock-timestamp - c-timestamp <=0 &&  c-timestamp - d-timestamp <=0 &&  globalclock-timestamp - d-timestamp <=0 &&  c-timestamp - globalclock-timestamp <=0 &&  d-timestamp - globalclock-timestamp <=0));
Enter("L1");
Exit("L1");
timeStamp = System.currentTimeMillis();
assert(((L3L1==false) &&  d-timestamp - c-timestamp <=0 &&  globalclock-timestamp - c-timestamp <=0 &&  c-timestamp - d-timestamp <=0 &&  globalclock-timestamp - d-timestamp <=0 &&  c-timestamp - globalclock-timestamp <=0 &&  d-timestamp - globalclock-timestamp <=0));
input("E3");
c = System.currentTimeMillis();
timeStamp = System.currentTimeMillis();
assert(((L3L1==false) &&  c-timestamp <=2 &&  c-timestamp - d-timestamp <=0 &&  globalclock-timestamp - d-timestamp <=0 &&  c-timestamp - globalclock-timestamp <=0 &&  d-timestamp - globalclock-timestamp <=0));
Enter("L3");
delay(2);
Exit("L3");
timeStamp = System.currentTimeMillis();
assert(((L3L1==false) &&  c-timestamp <=2 &&  c-timestamp - d-timestamp <=0 &&  globalclock-timestamp - d-timestamp <=0 &&  c-timestamp - globalclock-timestamp <=0 &&  d-timestamp - globalclock-timestamp <=0));
input("E4");
timeStamp = System.currentTimeMillis();
assert(((L3L1==true) &&  c-timestamp - d-timestamp <=0 &&  globalclock-timestamp - d-timestamp <=0 &&  c-timestamp - globalclock-timestamp <=0 &&  d-timestamp - globalclock-timestamp <=0));
Enter("L1");
Exit("L1");
timeStamp = System.currentTimeMillis();
assert(((L3L1==true) &&  c-timestamp - d-timestamp <=0 &&  globalclock-timestamp - d-timestamp <=0 &&  c-timestamp - globalclock-timestamp <=0 &&  d-timestamp - globalclock-timestamp <=0));
input("E3");
c = System.currentTimeMillis();
timeStamp = System.currentTimeMillis();
assert(((L3L1==true) &&  c-timestamp <=2 &&  c-timestamp - d-timestamp <=0 &&  globalclock-timestamp - d-timestamp <=0 &&  c-timestamp - globalclock-timestamp <=0 &&  d-timestamp - globalclock-timestamp <=0));
Enter("L3");
Exit("L3");
timeStamp = System.currentTimeMillis();
assert(((L3L1==true) &&  c-timestamp <=2 &&  c-timestamp - d-timestamp <=0 &&  globalclock-timestamp - d-timestamp <=0 &&  c-timestamp - globalclock-timestamp <=0 &&  d-timestamp - globalclock-timestamp <=0));
output("E8");
timeStamp = System.currentTimeMillis();
assert(((L3L1==true) &&  c-timestamp >=2 &&  d-timestamp >=2 &&  globalclock-timestamp >=2 &&  c-timestamp - d-timestamp <=0 &&  globalclock-timestamp - d-timestamp <=0 &&  c-timestamp - globalclock-timestamp <=0 &&  d-timestamp - globalclock-timestamp <=0));
Enter("L4");
}

