Start point for all clocks
Enter L0 
Clock Snapshot for using in assert before exit testcode
Exit L0 
assert(x<10 && z<10 && axe-x<=0 && z-x<=0 && x-axe<=0 && z-axe<=0 && x-z<=0 && axe-z<=0) 
E0
Clock start-point update
Enter L1 
assert(x<4 && x-axe<=0 && z-axe<=0 && x-z<=0 && axe-z<=0) 

end of test code

Start point for all clocks
Enter L0 
Clock Snapshot for using in assert before exit testcode
Exit L0 
assert(x<10 && z<10 && axe-x<=0 && z-x<=0 && x-axe<=0 && z-axe<=0 && x-z<=0 && axe-z<=0) 
E0
Clock start-point update
Enter L1 
assert(x<4 && x-axe<=0 && z-axe<=0 && x-z<=0 && axe-z<=0) 
Clock Snapshot for using in assert before exit testcode
Exit L1 
E1
Enter L2 
assert(x-axe<=0 && z-axe<=0 && x-z<=0 && axe-z<=0) 

end of test code

