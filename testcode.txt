test {

double timeStamp = System.currentTimeMillis();
double c = timeStamp
double d = timeStamp
double globalclock = timeStamp
double temp =System.currentTimeMillis();
temp = System.currentTimeMillis();
assert(((Component1==false) && d.value(temp)-c.value(temp)<=0 && globalclock.value(temp)-c.value(temp)<=0 && c.value(temp)-d.value(temp)<=0 && globalclock.value(temp)-d.value(temp)<=0 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=0));
Enter("L0");
Exit("L0");
temp = System.currentTimeMillis();
assert(((Component1==false) && d.value(temp)-c.value(temp)<=0 && globalclock.value(temp)-c.value(temp)<=0 && c.value(temp)-d.value(temp)<=0 && globalclock.value(temp)-d.value(temp)<=0 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=0));
input("E0");
temp = System.currentTimeMillis();
assert(((Component1==false) && d.value(temp)-c.value(temp)<=0 && globalclock.value(temp)-c.value(temp)<=0 && c.value(temp)-d.value(temp)<=0 && globalclock.value(temp)-d.value(temp)<=0 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=0));
Enter("L2");
Exit("L2");
temp = System.currentTimeMillis();
assert(((Component1==false) && d.value(temp)-c.value(temp)<=0 && globalclock.value(temp)-c.value(temp)<=0 && c.value(temp)-d.value(temp)<=0 && globalclock.value(temp)-d.value(temp)<=0 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=0));
input("E3");
c.time = System.currentTimeMillis();
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)<=2 && c.value(temp)-d.value(temp)<=0 && globalclock.value(temp)-d.value(temp)<=0 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=0));
Enter("L3");
Exit("L3");
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)<=2 && c.value(temp)-d.value(temp)<=0 && globalclock.value(temp)-d.value(temp)<=0 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=0));
output("E8");
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)>=2 && d.value(temp)>=2 && globalclock.value(temp)>=2 && c.value(temp)-d.value(temp)<=0 && globalclock.value(temp)-d.value(temp)<=0 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=0));
Enter("L4");
}
end of test code

test {

double timeStamp = System.currentTimeMillis();
double c = timeStamp
double d = timeStamp
double globalclock = timeStamp
double temp =System.currentTimeMillis();
;
temp = System.currentTimeMillis();
assert(((Component1==false) && d.value(temp)-c.value(temp)<=0 && globalclock.value(temp)-c.value(temp)<=0 && c.value(temp)-d.value(temp)<=0 && globalclock.value(temp)-d.value(temp)<=0 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=0));
Enter("L0");
Exit("L0");
temp = System.currentTimeMillis();
assert(((Component1==false) && d.value(temp)-c.value(temp)<=0 && globalclock.value(temp)-c.value(temp)<=0 && c.value(temp)-d.value(temp)<=0 && globalclock.value(temp)-d.value(temp)<=0 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=0));
input("E1");
temp = System.currentTimeMillis();
assert(((Component1==false) && d.value(temp)-c.value(temp)<=0 && globalclock.value(temp)-c.value(temp)<=0 && c.value(temp)-d.value(temp)<=0 && globalclock.value(temp)-d.value(temp)<=0 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=0));
Enter("L1");
Exit("L1");
temp = System.currentTimeMillis();
assert(((Component1==false) && d.value(temp)-c.value(temp)<=0 && globalclock.value(temp)-c.value(temp)<=0 && c.value(temp)-d.value(temp)<=0 && globalclock.value(temp)-d.value(temp)<=0 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=0));
input("E3");
c.time = System.currentTimeMillis();
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)<=2 && c.value(temp)-d.value(temp)<=0 && globalclock.value(temp)-d.value(temp)<=0 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=0));
Enter("L3");
Exit("L3");
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)<=2 && c.value(temp)-d.value(temp)<=0 && globalclock.value(temp)-d.value(temp)<=0 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=0));
input("E4");
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)-d.value(temp)<=0 && globalclock.value(temp)-d.value(temp)<=0 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=0));
Enter("L1");
Exit("L1");
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)-d.value(temp)<=0 && globalclock.value(temp)-d.value(temp)<=0 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=0));
input("E7");
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)-d.value(temp)<=0 && globalclock.value(temp)-d.value(temp)<=0 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=0));
Enter("L0");
Exit("L1");
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)-d.value(temp)<=0 && globalclock.value(temp)-d.value(temp)<=0 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=0));
input("E3");
c.time = System.currentTimeMillis();
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)<=2 && c.value(temp)-d.value(temp)<=0 && globalclock.value(temp)-d.value(temp)<=0 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=0));
Enter("L3");
Exit("L3");
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)<=2 && c.value(temp)-d.value(temp)<=0 && globalclock.value(temp)-d.value(temp)<=0 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=0));
output("E8");
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)>=2 && d.value(temp)>=2 && globalclock.value(temp)>=2 && c.value(temp)-d.value(temp)<=0 && globalclock.value(temp)-d.value(temp)<=0 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=0));
Enter("L4");
}
end of test code

test {

double timeStamp = System.currentTimeMillis();
double c = timeStamp
double d = timeStamp
double globalclock = timeStamp
double temp =System.currentTimeMillis();
;
temp = System.currentTimeMillis();
assert(((Component1==false) && d.value(temp)-c.value(temp)<=0 && globalclock.value(temp)-c.value(temp)<=0 && c.value(temp)-d.value(temp)<=0 && globalclock.value(temp)-d.value(temp)<=0 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=0));
Enter("L0");
Exit("L0");
temp = System.currentTimeMillis();
assert(((Component1==false) && d.value(temp)-c.value(temp)<=0 && globalclock.value(temp)-c.value(temp)<=0 && c.value(temp)-d.value(temp)<=0 && globalclock.value(temp)-d.value(temp)<=0 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=0));
input("E1");
temp = System.currentTimeMillis();
assert(((Component1==false) && d.value(temp)-c.value(temp)<=0 && globalclock.value(temp)-c.value(temp)<=0 && c.value(temp)-d.value(temp)<=0 && globalclock.value(temp)-d.value(temp)<=0 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=0));
Enter("L1");
Exit("L1");
temp = System.currentTimeMillis();
assert(((Component1==false) && d.value(temp)-c.value(temp)<=0 && globalclock.value(temp)-c.value(temp)<=0 && c.value(temp)-d.value(temp)<=0 && globalclock.value(temp)-d.value(temp)<=0 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=0));
input("E3");
c.time = System.currentTimeMillis();
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)<=2 && c.value(temp)-d.value(temp)<=0 && globalclock.value(temp)-d.value(temp)<=0 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=0));
Enter("L3");
Exit("L3");
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)<=2 && c.value(temp)-d.value(temp)<=0 && globalclock.value(temp)-d.value(temp)<=0 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=0));
output("E8");
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)>=2 && d.value(temp)>=2 && globalclock.value(temp)>=2 && c.value(temp)-d.value(temp)<=0 && globalclock.value(temp)-d.value(temp)<=0 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=0));
Enter("L4");
Exit("L4");
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)>=2 && d.value(temp)>=2 && globalclock.value(temp)>=2 && c.value(temp)-d.value(temp)<=0 && globalclock.value(temp)-d.value(temp)<=0 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=0));
input("E9");
d.time = System.currentTimeMillis();
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)>=2 && d.value(temp)==0 && globalclock.value(temp)>=2 && d.value(temp)-c.value(temp)<=-2 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=-2));
Enter("L6");
Exit("L6");
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)>=2 && d.value(temp)==0 && globalclock.value(temp)>=2 && d.value(temp)-c.value(temp)<=-2 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=-2));
output("E11");
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)>=2 && globalclock.value(temp)>=2 && d.value(temp)-c.value(temp)<=-2 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=-2));
Enter("L1");
}
end of test code

test {

double timeStamp = System.currentTimeMillis();
double c = timeStamp
double d = timeStamp
double globalclock = timeStamp
double temp =System.currentTimeMillis();
;
temp = System.currentTimeMillis();
assert(((Component1==false) && d.value(temp)-c.value(temp)<=0 && globalclock.value(temp)-c.value(temp)<=0 && c.value(temp)-d.value(temp)<=0 && globalclock.value(temp)-d.value(temp)<=0 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=0));
Enter("L0");
Exit("L0");
temp = System.currentTimeMillis();
assert(((Component1==false) && d.value(temp)-c.value(temp)<=0 && globalclock.value(temp)-c.value(temp)<=0 && c.value(temp)-d.value(temp)<=0 && globalclock.value(temp)-d.value(temp)<=0 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=0));
input("E1");
temp = System.currentTimeMillis();
assert(((Component1==false) && d.value(temp)-c.value(temp)<=0 && globalclock.value(temp)-c.value(temp)<=0 && c.value(temp)-d.value(temp)<=0 && globalclock.value(temp)-d.value(temp)<=0 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=0));
Enter("L1");
Exit("L1");
temp = System.currentTimeMillis();
assert(((Component1==false) && d.value(temp)-c.value(temp)<=0 && globalclock.value(temp)-c.value(temp)<=0 && c.value(temp)-d.value(temp)<=0 && globalclock.value(temp)-d.value(temp)<=0 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=0));
input("E3");
c.time = System.currentTimeMillis();
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)<=2 && c.value(temp)-d.value(temp)<=0 && globalclock.value(temp)-d.value(temp)<=0 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=0));
Enter("L3");
Exit("L3");
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)<=2 && c.value(temp)-d.value(temp)<=0 && globalclock.value(temp)-d.value(temp)<=0 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=0));
output("E8");
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)>=2 && d.value(temp)>=2 && globalclock.value(temp)>=2 && c.value(temp)-d.value(temp)<=0 && globalclock.value(temp)-d.value(temp)<=0 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=0));
Enter("L4");
Exit("L4");
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)>=2 && d.value(temp)>=2 && globalclock.value(temp)>=2 && c.value(temp)-d.value(temp)<=0 && globalclock.value(temp)-d.value(temp)<=0 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=0));
input("E14");
d.time = System.currentTimeMillis();
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)>=2 && d.value(temp)==0 && globalclock.value(temp)>=2 && d.value(temp)-c.value(temp)<=-2 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=-2));
Enter("L8");
Exit("L8");
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)>=2 && d.value(temp)==0 && globalclock.value(temp)>=2 && d.value(temp)-c.value(temp)<=-2 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=-2));
output("E15");
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)>=2 && d.value(temp)==0 && globalclock.value(temp)>=2 && d.value(temp)-c.value(temp)<=-2 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=-2));
Enter("L9");
Exit("L9");
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)>=2 && d.value(temp)==0 && globalclock.value(temp)>=2 && d.value(temp)-c.value(temp)<=-2 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=-2));
output("E16");
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)>=2 && d.value(temp)==0 && globalclock.value(temp)>=2 && d.value(temp)-c.value(temp)<=-2 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=-2));
Enter("L15");
Exit("L15");
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)>=2 && d.value(temp)==0 && globalclock.value(temp)>=2 && d.value(temp)-c.value(temp)<=-2 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=-2));
output("E24");
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)>=2 && d.value(temp)<=3 && globalclock.value(temp)>=2 && d.value(temp)-c.value(temp)<=-2 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=-2));
Enter("L10");
Exit("L10");
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)>=2 && d.value(temp)<=3 && globalclock.value(temp)>=2 && d.value(temp)-c.value(temp)<=-2 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=-2));
input("E18");
d.time = System.currentTimeMillis();
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)>=2 && d.value(temp)==0 && globalclock.value(temp)>=2 && d.value(temp)-c.value(temp)<=-2 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=-2));
Enter("L11");
Exit("L11");
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)>=2 && d.value(temp)==0 && globalclock.value(temp)>=2 && d.value(temp)-c.value(temp)<=-2 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=-2));
output("E22");
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)>=2 && d.value(temp)==0 && globalclock.value(temp)>=2 && d.value(temp)-c.value(temp)<=-2 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=-2));
Enter("L14");
}
end of test code

test {

double timeStamp = System.currentTimeMillis();
double c = timeStamp
double d = timeStamp
double globalclock = timeStamp
double temp =System.currentTimeMillis();
;
temp = System.currentTimeMillis();
assert(((Component1==false) && d.value(temp)-c.value(temp)<=0 && globalclock.value(temp)-c.value(temp)<=0 && c.value(temp)-d.value(temp)<=0 && globalclock.value(temp)-d.value(temp)<=0 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=0));
Enter("L0");
Exit("L0");
temp = System.currentTimeMillis();
assert(((Component1==false) && d.value(temp)-c.value(temp)<=0 && globalclock.value(temp)-c.value(temp)<=0 && c.value(temp)-d.value(temp)<=0 && globalclock.value(temp)-d.value(temp)<=0 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=0));
input("E1");
temp = System.currentTimeMillis();
assert(((Component1==false) && d.value(temp)-c.value(temp)<=0 && globalclock.value(temp)-c.value(temp)<=0 && c.value(temp)-d.value(temp)<=0 && globalclock.value(temp)-d.value(temp)<=0 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=0));
Enter("L1");
Exit("L1");
temp = System.currentTimeMillis();
assert(((Component1==false) && d.value(temp)-c.value(temp)<=0 && globalclock.value(temp)-c.value(temp)<=0 && c.value(temp)-d.value(temp)<=0 && globalclock.value(temp)-d.value(temp)<=0 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=0));
input("E3");
c.time = System.currentTimeMillis();
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)<=2 && c.value(temp)-d.value(temp)<=0 && globalclock.value(temp)-d.value(temp)<=0 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=0));
Enter("L3");
Exit("L3");
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)<=2 && c.value(temp)-d.value(temp)<=0 && globalclock.value(temp)-d.value(temp)<=0 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=0));
output("E8");
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)>=2 && d.value(temp)>=2 && globalclock.value(temp)>=2 && c.value(temp)-d.value(temp)<=0 && globalclock.value(temp)-d.value(temp)<=0 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=0));
Enter("L4");
Exit("L4");
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)>=2 && d.value(temp)>=2 && globalclock.value(temp)>=2 && c.value(temp)-d.value(temp)<=0 && globalclock.value(temp)-d.value(temp)<=0 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=0));
input("E14");
d.time = System.currentTimeMillis();
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)>=2 && d.value(temp)==0 && globalclock.value(temp)>=2 && d.value(temp)-c.value(temp)<=-2 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=-2));
Enter("L8");
Exit("L8");
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)>=2 && d.value(temp)==0 && globalclock.value(temp)>=2 && d.value(temp)-c.value(temp)<=-2 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=-2));
output("E15");
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)>=2 && d.value(temp)==0 && globalclock.value(temp)>=2 && d.value(temp)-c.value(temp)<=-2 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=-2));
Enter("L9");
Exit("L9");
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)>=2 && d.value(temp)==0 && globalclock.value(temp)>=2 && d.value(temp)-c.value(temp)<=-2 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=-2));
output("E16");
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)>=2 && d.value(temp)==0 && globalclock.value(temp)>=2 && d.value(temp)-c.value(temp)<=-2 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=-2));
Enter("L15");
Exit("L15");
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)>=2 && d.value(temp)==0 && globalclock.value(temp)>=2 && d.value(temp)-c.value(temp)<=-2 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=-2));
output("E24");
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)>=2 && d.value(temp)<=3 && globalclock.value(temp)>=2 && d.value(temp)-c.value(temp)<=-2 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=-2));
Enter("L10");
Exit("L10");
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)>=2 && d.value(temp)<=3 && globalclock.value(temp)>=2 && d.value(temp)-c.value(temp)<=-2 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=-2));
output("E17");
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)>=5 && d.value(temp)>=3 && d.value(temp)<=30 && globalclock.value(temp)>=5 && d.value(temp)-c.value(temp)<=-2 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=-2));
Enter("L12");
Exit("L12");
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)>=5 && d.value(temp)>=3 && d.value(temp)<=30 && globalclock.value(temp)>=5 && d.value(temp)-c.value(temp)<=-2 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=-2));
output("E20");
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)>=32 && d.value(temp)>=30 && d.value(temp)<=30 && globalclock.value(temp)>=32 && d.value(temp)-c.value(temp)<=-2 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=-2));
Enter("L13");
Exit("L13");
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)>=32 && d.value(temp)>=30 && d.value(temp)<=30 && globalclock.value(temp)>=32 && d.value(temp)-c.value(temp)<=-2 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=-2));
output("E21");
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)>=32 && d.value(temp)>=30 && globalclock.value(temp)>=32 && d.value(temp)-c.value(temp)<=-2 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=-2));
Enter("L7");
Exit("L7");
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)>=32 && d.value(temp)>=30 && globalclock.value(temp)>=32 && d.value(temp)-c.value(temp)<=-2 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=-2));
input("E12");
d.time = System.currentTimeMillis();
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)>2 && d.value(temp)==0 && globalclock.value(temp)>=32 && d.value(temp)-c.value(temp)<-2 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=-32));
Enter("L5");
Exit("L5");
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)>2 && d.value(temp)==0 && globalclock.value(temp)>=32 && d.value(temp)-c.value(temp)<-2 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=-32));
output("E10");
temp = System.currentTimeMillis();
assert(((Component1==false) && c.value(temp)>2 && globalclock.value(temp)>=32 && d.value(temp)-c.value(temp)<-2 && c.value(temp)-globalclock.value(temp)<=0 && d.value(temp)-globalclock.value(temp)<=-32));
Enter("L4");
}
end of test code

